name: OpenTide DetectionOps

trigger:
  branches:
    include:
      - "main" #Update this with your default branch

pr:
  branches:
    include:
      - "*" #By default, all branches are considered feature branches that merge to main and the pipeline will run on them        
pool:
  vmImage: ubuntu-latest

variables:
  - group: OpenTide #Create a variable group for OpenTide and use it for all your deployers variables/secrets
    #You may use more variable groups as needed, or Azure KeyVault. If you use secrets, read the section
    #Secret Handling below and ensure .azure/set_secrets.yml is correctly configured
  - name: OpenTide.DefaultBranch #Remember to configure this correctly, as the default branch isn't found in pipeline variables by default
    value: main      
  - name: OpenTide.Wiki.Enabled
    value: True #Set to False to skip all documentation jobs
  - name: OpenTide.Wiki.RepoName
    value: #Name of your Azure DevOps Wiki (e.g. OpenTideWiki)
  - name: OpenTide.Wiki.BranchName
    value: #Name of your Azure DevOps Wiki Branch (e.g. main)
  - name: OpenTide.DetectionRules.Path #Align this value with the path to Detection Rules, if changed
    value: Objects/Detection Rules/
  - name: OpenTide.Repo.Checkout.Depth #Leave default value as allows better Pull Requests Base Commit Resolution, but may be lowered in case of performance issues
    value: 1000
  - name: OpenTide.Commiter.UserEmail
    value: #Fill this with what you'd like to show up as commiter
  - name: OpenTide.Commiter.UserName
    value: #Fill this with what you'd like to show up as commiter
  - name: OpenTide.Deployment.Environment.Production
    value: #Fill this with the environment you created for Production deployment, for example name it "Production Rules"
  - name: OpenTide.Deployment.Environment.Staging
    value: #Fill this with the environment you created for Production deployment, for example name it "Staging Rules"

# Deployment Environments
# Ensure to create those beforehand, and to allow the pipeline to access
# under Pipeline permissions, in the Security panel of the Environment

# IMPORTANT - Secret Handling
# When you declare a variable group which contains variables that you set as secret
# (toggled keypad, and value is hidden), the pipeline will no longer see those variables
# as environment variables.
# We handle it with a special .azure/set_secrets.yml template, which you can use to declare your
# secrets.

#By default the pipeline points to the GitHub repo, where it will fetch all the pipeline
#definitions and clone the backend in the build directory. If you are developing locally,
#you may adjust this to a repository you own - make sure it is called CoreTide, as this
#name is necessary as part of the pipeline itself
resources:
  repositories:
    - repository: coretide
      type: github
      name: OpenTideHQ/CoreTide  # Your GitHub repository
      ref: development 
      endpoint: GitHub OpenTide  # The service connection to GitHub
    - repository: Wiki # Your target Wiki repository - you can remove this resource if you set OpenTide.Wiki.Enabled to False
      type: git
      name: #Replace with the Wiki repo name, must be the same as OpenTide.Wiki.RepoName
      ref: #Replace with the Wiki repo branch name, must be the same as OpenTide.Wiki.BranchName

stages:
  - template: Pipelines/Azure/opentide.yml@coretide
