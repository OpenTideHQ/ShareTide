name: Azure - Virtual Machine Scripting
criticality: High
references:
  public:
    1: https://microsoft.github.io/Azure-Threat-Research-Matrix/Execution/AZT301/AZT301/
    2: https://stratus-red-team.cloud/attack-techniques/azure/azure.execution.vm-custom-script-extension/
    3: https://soroganoth.com/post/research/azure_vm_security/
  #internal:
    #a: 

metadata:
  uuid: 3435c5fd-1069-40ee-ae79-54c672ce454d
  schema: tvm::2.1
  version: 1
  created: 2025-09-03
  modified: 2025-09-04
  tlp: clear
  #author: 
  #contributors:
    #-
  organisation:
    uuid: 56b0a0f0-b0bc-47d9-bb46-02f80ae2065a
    name: EC DIGIT CSOC

threat:
  actors:
    - name: misp::b2056ff0-00b9-482e-b11c-c771daa5f28a #APT29, Group 100, COZY BEAR, The Dukes, Minidionis, SeaDuke, YTTRIUM, IRON HEMLOCK, Grizzly Steppe, G0016, ATK7, Cloaked Ursa, TA421, Blue Kitsune, ITG11, BlueBravo, Nobelium, UAC-0029
      sighting: |
        APT29 has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines.
        APT29 has also leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments.
      references:
        - https://www.microsoft.com/security/blog/2021/10/25/nobelium-targeting-delegated-administrative-privileges-to-facilitate-broader-attacks/  
        - https://www.microsoft.com/security/blog/2021/05/28/breaking-down-nobeliums-latest-early-stage-toolset/
    - name: att&ck::G1024 #[Enterprise] Akira, GOLD SAHARA, Howling Scorpius, PUNK SPIDER
      sighting: |
        Akira has used PowerShell scripts for credential harvesting and privilege escalation.
      references:
        - https://blog.talosintelligence.com/akira-ransomware-continues-to-evolve/
    - name: misp::066d25c1-71bd-4bd4-8ca7-edbba00063f4 #APT19, DEEP PANDA, Codoso, WebMasters, KungFu Kittens, Black Vine, TEMP.Avengers, Group 13, PinkPanther, Shell Crew, BRONZE FIRESTONE, G0009, G0073, Pupa, Sunshop Group, Checkered Typhoon
      sighting: |
        APT19 used PowerShell commands to execute payloads.
      references:
        - https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html
    - name: misp::5b4ee3ea-eee3-4c8e-8323-85ae32658754 #APT28, Pawn Storm, FANCY BEAR, Sednit, SNAKEMACKEREL, Tsar Team, TG-4127, STRONTIUM, Swallowtail, IRON TWILIGHT, Group 74, SIG40, Grizzly Steppe, G0007, ATK5, Fighting Ursa, ITG05, Blue Athena, TA422, T-APT-12, APT-C-20, UAC-0028, FROZENLAKE, Sofacy, Forest Blizzard, BlueDelta, Fancy Bear, GruesomeLarch
      sighting: |
        APT28 downloads and executes PowerShell scripts and performs PowerShell commands.
      references:
        - https://researchcenter.paloaltonetworks.com/2018/06/unit42-sofacy-groups-parallel-attacks/
        - https://www.trendmicro.com/en_us/research/20/l/pawn-storm-lack-of-sophistication-as-a-strategy.html
        - https://media.defense.gov/2021/Jul/01/2002753896/-1/-1/1/CSA_GRU_GLOBAL_BRUTE_FORCE_CAMPAIGN_UOO158036-21.PDF
    - name: misp::b2056ff0-00b9-482e-b11c-c771daa5f28a #APT29, Group 100, COZY BEAR, The Dukes, Minidionis, SeaDuke, YTTRIUM, IRON HEMLOCK, Grizzly Steppe, G0016, ATK7, Cloaked Ursa, TA421, Blue Kitsune, ITG11, BlueBravo, Nobelium, UAC-0029
      sighting: |
        APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke.  
        APT29 has developed malware variants written in Python.
      references:
        - http://www.symantec.com/connect/blogs/forkmeiamfamous-seaduke-latest-weapon-duke-armory
    - name: att&ck::G0022 #[Enterprise] APT3, Buckeye, Gothic Panda, Pirpi, TG-0110, Threat Group-0110, UPS Team
      sighting: |
        APT3 has used PowerShell on victim systems to download and run payloads after exploitation.
      references:
        - https://www.fireeye.com/blog/threat-research/2014/11/operation_doubletap.html
    - name: misp::aa29ae56-e54b-47a2-ad16-d3ab0242d5d7 #APT32, OceanLotus Group, Ocean Lotus, OceanLotus, Cobalt Kitty, APT-C-00, SeaLotus, Sea Lotus, APT-32, APT 32, Ocean Buffalo, POND LOACH, TIN WOODLAWN, BISMUTH, ATK17, G0050, Canvas Cyclone
      sighting: |
        APT32 has used PowerShell-based tools, PowerShell one-liners, and shellcode loaders for execution.
      references:
        - https://www.fireeye.com/blog/threat-research/2017/05/cyber-espionage-apt32.html
    - name: misp::4f69ec6d-cb6b-42af-b8e2-920a2aa4be10 #APT33, APT 33, Elfin, MAGNALLIUM, Refined Kitten, HOLMIUM, COBALT TRINITY, G0064, ATK35, Peach Sandstorm, TA451
      sighting: |
        APT33 has utilized PowerShell to download files from the C2 server and run various scripts.
      references:
        - https://www.symantec.com/blogs/threat-intelligence/elfin-apt33-espionage
    - name: att&ck::G0082 #[ICS] APT38, BeagleBoyz, Bluenoroff, COPERNICIUM, NICKEL GLADSTONE, Sapphire Sleet, Stardust Chollima
      sighting: |
        APT38 has used PowerShell to execute commands and other operational tasks.
      references:
        - https://us-cert.cisa.gov/ncas/alerts/aa20-239a
    - name: misp::c2c64bd3-a325-446f-91a8-b4c0f173a30b #APT39, Chafer, REMIX KITTEN, COBALT HICKMAN, G0087, Radio Serpens, TA454, ITG07, Burgundy Sandstorm
      sighting: |
        APT39 has used PowerShell to execute malicious code.
      references:
        - https://www.bitdefender.com/blog/labs/iranian-chafer-apt-targeted-air-transportation-and-government-in-kuwait-and-saudi-arabia/  
        - https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/chafer-latest-attacks-reveal-heightened-ambitions
    - name: misp::9c124874-042d-48cd-b72b-ccdc51ecbbd6 #APT41, G0096, TA415, Blackfly, Grayfly, LEAD, BARIUM, WICKED SPIDER, WICKED PANDA, BRONZE ATLAS, BRONZE EXPORT, Red Kelpie, G0044, Earth Baku, Amoeba, HOODOO, Brass Typhoon, Winnti, Double Dragon, TG-2633, Leopard Typhoon
      sighting: |
        APT41 leveraged PowerShell to deploy malware families in victimsâ€™ environments.
      references:
        - https://www.mandiant.com/sites/default/files/2022-02/rt-apt41-dual-operation.pdf  
        - https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html
    - name: misp::35f887ad-6709-4d0b-8e9c-6b3fa09c783f #APT42, UNC788, CALANQUE
      sighting: |
        APT42 has downloaded and executed PowerShell payloads.
      references:
        - https://services.google.com/fh/files/misc/apt42-crooked-charms-cons-and-compromises.pdf
    - name: misp::a47b79ae-7a0c-4308-9efc-294af19cc795 #APT5, KEYHOLE PANDA, MANGANESE, BRONZE FLEETWOOD, TEMP.Bottle, Mulberry Typhoon, Poisoned Flight
      sighting: |
        APT5 has used PowerShell to accomplish tasks within targeted environments.
      references:
        - https://www.mandiant.com/resources/blog/updates-on-chinese-apt-compromising-pulse-secure-vpn-devices
    - name: att&ck::G0143 #[Enterprise] Aquatic Panda
      sighting: |
        Aquatic Panda has downloaded additional scripts and executed Base64 encoded commands in PowerShell.
      references:
        - https://www.crowdstrike.com/blog/overwatch-exposes-aquatic-panda-in-possession-of-log-4-shell-exploit-tools/
    - name: att&ck::G1043 #[Enterprise] BlackByte, Hecamede
      sighting: |
        BlackByte used encoded PowerShell commands during operations.
      references:
        - https://www.microsoft.com/en-us/security/blog/2023/07/06/the-five-day-job-a-blackbyte-ransomware-intrusion-case-study/
    - name: att&ck::G0108 #[Enterprise] Blue Mockingbird
      sighting: |
        Blue Mockingbird has used PowerShell reverse TCP shells to issue interactive commands over a network connection.
      references:
        - https://redcanary.com/blog/blue-mockingbird-cryptominer/
    - name: att&ck::G0114 #[Enterprise] Chimera
      sighting: |
        Chimera has used PowerShell scripts to execute malicious payloads and the DSInternals PowerShell module to make use of Active Directory features.
      references:
        - https://cycraft.com/download/CyCraft-Whitepaper-Chimera_V4.1.pdf
    - name: misp::b7497d28-02de-4722-8b97-1fc53e1d1b68 #Winter Vivern, UAC-0114, TA473, TAG-70, TA-473
      sighting: |
        Winter Vivern passed execution from document macros to PowerShell scripts during initial access operations.
      references:
        - https://www.domaintools.com/resources/blog/winter-vivern-a-look-at-re-crafted-government-maldocs/
    - name: misp::fa80877c-f509-4daf-8b62-20aba1635f68 #Turla, Snake, VENOMOUS Bear, Group 88, Waterbug, WRAITH, Uroburos, Pfinet, TAG_0530, KRYPTON, Hippo Team, Pacifier APT, Popeye, SIG23, IRON HUNTER, MAKERSMARK, ATK13, G0010, ITG12, Blue Python, SUMMIT, UNC4210, Secret Blizzard, UAC-0144, UAC-0024, UAC-0003
      sighting: |
        Turla has used PowerShell to execute commands/scripts, in some cases via a custom executable or code from Empire's PSInject.
      references:
        - https://www.welivesecurity.com/2018/05/22/turla-mosquito-shift-towards-generic-tools/
    - name: misp::98be4300-a9ef-11e8-9a95-bb9221083cfc #Thrip, G0076, ATK78
      sighting: |
        Thrip leveraged PowerShell to run commands to download payloads, traverse the compromised networks, and carry out reconnaissance.
      references:
        - https://www.symantec.com/blogs/threat-intelligence/thrip-hits-satellite-telecoms-defense-targets
  killchain: Execution
  att&ck:
    - T1059 #Command and Scripting Interpreter
    - T1078 #Valid Accounts
    - T1204 #User Execution
  chaining:
    - relation: sequence::succeeds
      vector: 140907eb-c9fb-4330-9d71-656422388b2b #Azure - Gather Role Information
      description: |
        Adversaries need to identify privileged accounts and misconfigured role 
        assignments that can be exploited for privilege escalation.
    - relation: sequence::succeeds
      vector: b1593e0b-1b3b-462d-9ab6-21d1c136469d #Azure - Gather Resource Data
      description: |
        The attacker obtains credentials (via phishing, password spray, leaked keys)
        granting at least Reader access to the target Azure tenant.
    - relation: sequence::succeeds
      vector: 2743bf18-3b86-4721-bf3e-153dcda0b149 #Azure - Valid Credentials
      description: |
        Adversaries obtain the username and password of an AzureAD user either through
        phishing, password spraying, brute-force attacks, or credentials leaked online.
    - relation: sequence::preceeds
      vector: 61ddc240-e5a6-4ca8-ae77-6b471b498913 #Code execution via custom script extensions in Azure
      description: |
        Adversaries must have an Azure role that grants the ability to write or deploy 
        custom script extensions on virtual machines.
    - relation: sequence::preceeds
      vector: 23f6a192-a25d-48b8-a235-7bb55e483682 #Persistence w/ Azure Automanage Machine Configuration
      description: |
        The adversary needs the owner access role on the targeted Azure subscription to apply
        the Azure Policy and grant permissions for the system-managed identities.
    - relation: sequence::preceeds
      vector: b954303c-0ad0-4dc0-b5ca-492c3de9cd53 #Collecting sensitive information via custom script extensions
      description: |
        Attackers need to gain access to an Azure account with the Virtual Machine Contributor 
        role (or equivalent) can use custom script extensions to execute arbitrary code 
        as SYSTEM or root on VMs.
    - relation: sequence::preceeds
      vector: 8934c19a-954b-4dce-8081-0a6acca599f6 #Malicious container image deployed
      description: |
        The adversary need to be able to inject malicious code into container image which will be deployed in
        target environment. This can be achieved by putting malicious image into public registry and tricking 
        developer into using it, getting access into internal CI/CD pipeline, uploading modified image into 
        internal registry or running the image directly on compromised host. 
  #cve:
    #-
  #misp:
    #-
  domains:   
    - Public Cloud
  terrain: |
    Through compromised account credentials or misused RBAC permissions, adversaries 
    obtains sufficient access to invoke scripting features (RunCommand, extensions).
  targets:
    - Virtual Machines
  platforms:
    - Azure
    - Windows
    - Linux 
  severity: Significant incident
  leverage:
    - Elevation of privilege
    - Information Disclosure
    - Infrastructure Compromise
  impact:
    - Data Breach
    - IP Loss
    - Reputational Damages
    - Identity Theft
  viability: Likely
  description: |
    This threat vector refers to adversaries running scripts or commands directly 
    on Azure virtual machines via built-in features, enabling malicious code execution 
    and system compromise.

    ## Example Attack Scenario
    An attacker gains access to Azure portal credentials (via phishing or leaked secrets), 
    allowing privilege escalation to interact with the management plane of Azure resources. 
    The attacker then uses features like **RunCommand**, **CustomScriptExtension**, 
    or **Serial Console** to execute PowerShell or shell scripts directly on a targeted VM. 
    For instance, leveraging **CustomScriptExtension**, the intruder injects a script 
    to dump credentials, establish persistence, or exfiltrate sensitive filesâ€”all as SYSTEM user.

    ## Attack Goals and Impact
    - The primary **goal** is to execute arbitrary commands with SYSTEM privileges, 
    enabling full compromise of the VM and escalation to additional assets connected to the VM.
    - **Impact** includes:
      - Data exfiltration (sensitive file theft, database dumps)
      - Persistence (deploying webshells, creating new users)
      - Lateral movement (pivoting from VM to network or cloud resources)
      - Disruption (cryptomining, ransomware deployment)
      - Evasion (disabling defenses on the VM level).

    ## Attack Flow and Methodology
    1. The attacker identifies exposed or misconfigured Azure virtual machines, focusing 
      on accounts with management access.
    2. - The attacker uses management plane operations: for example, `Microsoft.Compute/virtualMachines/runCommand/action`, 
      `Microsoft.Compute/virtualMachines/extensions/write`, or serial console access.
      - Executes malicious scripts (PowerShell, Bash) as SYSTEM.
    3. - Harvests credentials, establishes persistence, or launches further attacks.
      - May leverage logging gaps to avoid detection, or clean up traces after execution.
    4. - Activity can be detected via auditing specific events such as `Microsoft.Compute/virtualMachines/extensions/write` 
      or anomalous use of VM scripting features.
