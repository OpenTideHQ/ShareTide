name: Password hash cracking on Windows
criticality: Medium
references:
  public:
    1: https://robertscocca.medium.com/cracking-windows-hashes-fb0af3108c0a
    2: https://securitygladiators.com/security/software/password-cracker/
    3: https://www.freecodecamp.org/news/crack-passwords-using-john-the-ripper-pentesting-tutorial/
    4: https://medium.com/cyber-security-resources/hacking-and-cracking-ntlm-hash-to-get-windows-admin-password-f44819b01db5
    5: https://www.thehacker.recipes/ad/movement/credentials/cracking
    6: https://www.softwaretestinghelp.com/password-cracker-tools/
    7: https://www.freecodecamp.org/news/hacking-with-hashcat-a-practical-guide/
    8: https://crackstation.net/
    9: https://download.cnet.com/Password-Cracker/3000-2092_4-10226556.html
    10: https://www.darknet.org.uk/2006/09/brutus-password-cracker-download-brutus-aet2zip-aet2/
    11: https://www.softpedia.com/get/Security/Encrypting/RainbowCrack.shtml
    12: https://sourceforge.net/projects/thc-hydra.mirror/
    13: https://www.cyberpratibha.com/cain-and-abel-software-cracking-hashes/
    14: https://l0phtcrack.gitlab.io/
    15: https://www.pwndefend.com/2021/10/18/password-auditing-with-l0phtcrack-7-a-quick-intro/
  #internal:
    #a: 
  #restricted:
    #A: 
  #reports:
    #-

metadata:
  uuid: 35c76d6c-2ac7-486e-b0b7-b56f6b110bec
  schema: tvm::2.0
  tlp: clear
  version: 2
  created: 2023-02-03
  modified: 2023-02-06
  organisation:
    uuid: 56b0a0f0-b0bc-47d9-bb46-02f80ae2065a
    name: EC DIGIT CSOC

threat:
  actors:
    - name: att&ck::G0037 #[Enterprise] FIN6, Camouflage Tempest, ITG08, Magecart Group 6, Skeleton Spider, TAAL
    - name: misp::647894f6-1723-4cba-aba4-0ef0966d5302 #FIN6, SKELETON SPIDER, ITG08, MageCart Group 6, White Giant, GOLD FRANKLIN, ATK88, G0037, Camouflage Tempest, TA4557
    - name: att&ck::G0035 #[Enterprise] Dragonfly, BROMINE, Berserk Bear, Crouching Yeti, DYMALLOY, Energetic Bear, Ghost Blizzard, IRON LIBERTY, TEMP.Isotope, TG-4192
    - name: misp::64d6559c-6d5c-4585-bbf9-c17868f763ee #ENERGETIC BEAR, BERSERK BEAR, ALLANITE, CASTLE, DYMALLOY, TG-4192, Dragonfly, Crouching Yeti, Group 24, Havex, Koala Team, IRON LIBERTY, G0035, ATK6, ITG15, BROMINE, Blue Kraken, Ghost Blizzard
  killchain: Credential Access
  att&ck:
    - T1110.002
  domains:
    - Enterprise
    - Private Cloud
    - Public Cloud
  terrain: |
    A threat actor is using already compromised Windows endpoint.
  targets:
    - Desktop
    - Laptop
    - Workstations
    - Control Server
    - Remote access
    - System admin
    - Public-Facing Servers
    - Web Application Servers
    - Production Database
  platforms:
    - Windows
    - Active Directory
  severity: Moderate incident
  leverage:
    - Tampering
  impact:
    - Nuisance
  viability: Likely
  description: |
    Threat actors often extract valid credentials from target systems. When
    these credentials are in a hashed format, threat actors may use different
    methods to crack and obtain the credentials in clear text. When this
    information cannot be directly leveraged for higher privileges (like with
    pass-the-hash, overpass-the-hash), it is required to crack it. Some methods
    that threat actors use include: brute force, dictionary attack, or sub-set
    of the dictionary attack named rainbow tables. Threat actors can use
    a variety of tools to crack password hashes. For example,
    Mimikatz, Hashcat, CrackStation, Password Cracker, Brutus Password Cracker,
    Aircrack, THC Hydra, RainbowCrack, Cain and Abel, Medusa, John The Ripper,
    ophCrack, WFuzz, L0phtCrack, OphCrack and others.

    The threat actors can crack the password hashes, for example with JTR or
    Hashcat cracking tools that use text files to match and crack the hashes. 
    (an example for a text file could be: rockyou.txt)

    gunzip /usr/share/wordlist/file.txt
    john hash.txt /usr/share/wordlists/file.txt â€” format=nt

    hashcat -m 1000 hash.txt /usr/share/wordlists/file.txt

    An example of how to use Hashcat for a dictionary attack:

    hashcat --attack-mode 0 --hash-type $number $hashes_file $wordlist_file

    OR 

    hashcat --loopback --attack-mode 0 --rules-file $rules_file --hash-type $number $hashes_file $wordlist_file

    Example for Hashcat tool which can bruteforce any password from 4 to 8
    characters long:

    hashcat --attack-mode 3 --increment --increment-min 4 --increment-max 8 --hash-type $number $hashes_file "file"
    
    Hashcat can also be started with custom charsets:

    hashcat --attack-mode 3 --custom-charset1 "?u" --custom-charset2 "?l?u?d" --custom-charset3 "?d" --hash-type $number $hashes_file "file"

