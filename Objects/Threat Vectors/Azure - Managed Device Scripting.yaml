name: Azure - Managed Device Scripting
criticality: High
references:
  public:
    1: https://techcommunity.microsoft.com/t5/security-compliance-and-identity/introducing-the-azure-threat-research-matrix/ba-p/3584976
    2: https://microsoft.github.io/Azure-Threat-Research-Matrix/Execution/AZT303/AZT303/
  #internal:
    #a: 
metadata:
  uuid: 4d9cc646-debc-477b-93cb-4ea74c47c02c
  schema: tvm::2.1
  version: 2
  created: 2025-09-01
  modified: 2025-09-04
  tlp: clear
  #author: 
  #contributors:
    #-
  organisation:
    uuid: 56b0a0f0-b0bc-47d9-bb46-02f80ae2065a
    name: EC DIGIT CSOC

threat:
  actors:
    - name: att&ck::G1024 #[Enterprise] Akira, GOLD SAHARA, Howling Scorpius, PUNK SPIDER
      sighting: |
        Akira has used PowerShell scripts for credential harvesting and privilege escalation.
      references:
        - https://blog.talosintelligence.com/akira-ransomware-continues-to-evolve/
    - name: misp::066d25c1-71bd-4bd4-8ca7-edbba00063f4 #APT19, DEEP PANDA, Codoso, WebMasters, KungFu Kittens, Black Vine, TEMP.Avengers, Group 13, PinkPanther, Shell Crew, BRONZE FIRESTONE, G0009, G0073, Pupa, Sunshop Group, Checkered Typhoon
      sighting: |
        APT19 used PowerShell commands to execute payloads.
      references:
        - https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html
    - name: misp::5b4ee3ea-eee3-4c8e-8323-85ae32658754 #APT28, Pawn Storm, FANCY BEAR, Sednit, SNAKEMACKEREL, Tsar Team, TG-4127, STRONTIUM, Swallowtail, IRON TWILIGHT, Group 74, SIG40, Grizzly Steppe, G0007, ATK5, Fighting Ursa, ITG05, Blue Athena, TA422, T-APT-12, APT-C-20, UAC-0028, FROZENLAKE, Sofacy, Forest Blizzard, BlueDelta, Fancy Bear, GruesomeLarch
      sighting: |
        APT28 downloads and executes PowerShell scripts and performs PowerShell commands.
      references:
        - https://researchcenter.paloaltonetworks.com/2018/06/unit42-sofacy-groups-parallel-attacks/
        - https://www.trendmicro.com/en_us/research/20/l/pawn-storm-lack-of-sophistication-as-a-strategy.html
        - https://media.defense.gov/2021/Jul/01/2002753896/-1/-1/1/CSA_GRU_GLOBAL_BRUTE_FORCE_CAMPAIGN_UOO158036-21.PDF
    - name: misp::b2056ff0-00b9-482e-b11c-c771daa5f28a #APT29, Group 100, COZY BEAR, The Dukes, Minidionis, SeaDuke, YTTRIUM, IRON HEMLOCK, Grizzly Steppe, G0016, ATK7, Cloaked Ursa, TA421, Blue Kitsune, ITG11, BlueBravo, Nobelium, UAC-0029
      sighting: |
        APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke.  
        APT29 has developed malware variants written in Python.
      references:
        - http://www.symantec.com/connect/blogs/forkmeiamfamous-seaduke-latest-weapon-duke-armory
    - name: att&ck::G0022 #[Enterprise] APT3, Buckeye, Gothic Panda, Pirpi, TG-0110, Threat Group-0110, UPS Team
      sighting: |
        APT3 has used PowerShell on victim systems to download and run payloads after exploitation.
      references:
        - https://www.fireeye.com/blog/threat-research/2014/11/operation_doubletap.html
    - name: misp::aa29ae56-e54b-47a2-ad16-d3ab0242d5d7 #APT32, OceanLotus Group, Ocean Lotus, OceanLotus, Cobalt Kitty, APT-C-00, SeaLotus, Sea Lotus, APT-32, APT 32, Ocean Buffalo, POND LOACH, TIN WOODLAWN, BISMUTH, ATK17, G0050, Canvas Cyclone
      sighting: |
        APT32 has used PowerShell-based tools, PowerShell one-liners, and shellcode loaders for execution.
      references:
        - https://www.fireeye.com/blog/threat-research/2017/05/cyber-espionage-apt32.html
    - name: misp::50cd027f-df14-40b2-aa22-bf5de5061163 #APT37, APT 37, Group 123, Group123, InkySquid, Operation Daybreak, Operation Erebus, Reaper Group, Reaper, Red Eyes, Ricochet Chollima, ScarCruft, Venus 121, ATK4, G0067, Moldy Pisces, APT-C-28
      sighting: |
        APT37 has used Python scripts to execute payloads.
      references:
        - https://www.volexity.com/blog/2021/08/24/north-korean-bluelight-special-inkysquid-deploys-rokrat/
    - name: att&ck::G0035 #[ICS] Dragonfly, BROMINE, Berserk Bear, Crouching Yeti, DYMALLOY, Energetic Bear, Ghost Blizzard, IRON LIBERTY, TEMP.Isotope, TG-4192
      sighting: |
        Dragonfly has used various types of scripting to perform operations, including Python scripts. The group was observed installing Python 2.7 on a victim.
      references:
        - https://www.us-cert.gov/ncas/alerts/TA18-074A
    - name: att&ck::G1039 #[Enterprise] RedCurl
      sighting: |
        RedCurl has used a Python script to establish outbound communication and to execute commands using SMB port 445.
      references:
        - https://www.trendmicro.com/en_us/research/24/c/unveiling-earth-kapre-aka-redcurls-cyberespionage-tactics-with-t.html
    - name: misp::53583c40-935e-11e9-b4fc-d7e217a306d2 #Rocke, Aged Libra
      sighting: |
        Rocke has used Python-based malware to install and spread their coinminer.
      references:
        - https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang
    - name: misp::0ab7c8de-fc23-4793-99aa-7ee336199e26 #Tonto Team, CactusPete, KARMA PANDA, BRONZE HUNTLEY, COPPER, Red Beifang, G0131, PLA Unit 65017, Earth Akhlut, TAG-74
      sighting: |
        Tonto Team has used Python-based tools for execution.
      references:
        - https://vb2020.vblocalhost.com/uploads/VB2020-06.pdf
    - name: misp::6bf7e6b6-5917-45a6-9567-f0baba79768c #APT31, ZIRCONIUM, JUDGMENT PANDA, BRONZE VINEWOOD, Red keres, Violet Typhoon, TA412, Zirconium
      sighting: |
        ZIRCONIUM has used Python-based implants to interact with compromised hosts.
      references:
        - https://blog.google/threat-analysis-group/how-were-tackling-evolving-online-threats/
        - https://www.zscaler.com/blogs/security-research/apt-31-leverages-covid-19-vaccine-theme-and-abuses-legitimate-online
  killchain: Execution
  att&ck:
    - T1059 #Command and Scripting Interpreter
    - T1021 #Remote Services
    - T1078 #Valid Accounts
  chaining:
    - relation: sequence::succeeds
      vector: 140907eb-c9fb-4330-9d71-656422388b2b #Azure - Gather Role Information
      description: |
        Adversaries need to identify privileged accounts and misconfigured role 
        assignments that can be exploited for privilege escalation.
    - relation: sequence::succeeds
      vector: b1593e0b-1b3b-462d-9ab6-21d1c136469d #Azure - Gather Resource Data
      description: |
        The attacker obtains credentials (via phishing, password spray, leaked keys)
        granting at least Reader access to the target Azure tenant.
    - relation: sequence::succeeds
      vector: 2743bf18-3b86-4721-bf3e-153dcda0b149 #Azure - Valid Credentials
      description: |
        Adversaries obtain the username and password of an AzureAD user either through
        phishing, password spraying, brute-force attacks, or credentials leaked online.
    - relation: sequence::preceeds
      vector: 61ddc240-e5a6-4ca8-ae77-6b471b498913 #Code execution via custom script extensions in Azure
      description: |
        Adversaries must have an Azure role that grants the ability to write or deploy 
        custom script extensions on virtual machines.
    - relation: sequence::preceeds
      vector: 23f6a192-a25d-48b8-a235-7bb55e483682 #Persistence w/ Azure Automanage Machine Configuration
      description: |
        The adversary needs the owner access role on the targeted Azure subscription to apply
        the Azure Policy and grant permissions for the system-managed identities.
  #cve:
    #-
  #misp:
    #-
  domains:
     - Public Cloud
  terrain: |
    Adversaries obtain elevated access within AzureAD or Intune; often
    via credential theft, privilege escalation, or social engineering.
  targets:
    - Workstations    
    - Mobile phone
    - Cloud Portal     
  platforms:
    - Azure AD
    - Windows
    - PowerShell
  severity: Significant incident
  leverage:
    - Elevation of privilege
    - Information Disclosure   
  impact:
    - Data Breach
    - Reputational Damages
    - Identity Theft
  viability: Likely
  description: |
    The following threat vector involves adversaries abusing device management capabilities 
    to execute code on devices through services like Intune and Entra ID (AzureAD).

    ## Example Attack Scenario

    An attacker who gains administrative access to AzureAD or Intune can deploy PowerShell 
    or Python scripts to managed devices. For example, a compromised AzureAD account 
    with device management rights could push a malicious PowerShell script to employee 
    laptops using Intune, which then installs ransomware or exfiltrates sensitive data 
    without user interaction.

    ## Attack Goals and Impact

    The primary goal is to achieve **remote code execution** across a fleet of managed 
    devices. Attackers may aim to:
    - Steal credentials or sensitive files
    - Install persistence mechanisms for future access
    - Deploy ransomware, spyware, or other malware
    This can lead to widespread compromise, significant data breaches, and business 
    disruption, particularly because device scripting can touch many endpoints simultaneously.

    ## Attack Flow and Methodology

    1. Use administrative capabilities (such as `microsoft.directory/devices/basic/update`) 
    to push scripts to selected managed devices.
    2. The scripts execute with system-level privileges if the targeting configuration 
    is misused, allowing the attacker to harvest data, pivot to other internal resources, 
    or further entrench their presence.
    3. Attackers may cover tracks by modifying or deleting audit logs accessible through IntuneAuditLogs.
    