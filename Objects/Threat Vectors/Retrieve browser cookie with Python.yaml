name: Retrieve browser cookie with Python
criticality: High
references:
  public:
    1: https://pypi.org/project/browsercookie/
    2: https://bobbyhadz.com/blog/how-to-use-cookies-in-python-requests
    3: https://www.geeksforgeeks.org/retrieving-cookies-in-python/
    4: https://medium.com/@morgan2000/extracting-cookies-using-python-3-c61b3a3ac356
  #internal:
    #a: 
  #reports:
    #-

metadata:
  uuid: b5e8300c-6887-48c2-a18d-e3d910478fe8
  schema: tvm::2.0
  version: 1
  created: 2024-11-05
  modified: 2024-11-05
  tlp: clear
  organisation:
    uuid: 56b0a0f0-b0bc-47d9-bb46-02f80ae2065a
    name: EC DIGIT CSOC

threat:
  #actors:
    #-
  killchain: Credential Access
  att&ck:
    - T1111 #Multi-Factor Authentication Interception
  chaining:
    - relation: sequence::succeeds
      vector: ec8201d4-c135-406b-a3b5-4a070e80a2ee #Credential manipulation on local Windows endpoint
      description: |
        Attacker must have a foot on the Windows enpoint to execute Python.
    - relation: atomicity::implements
      vector: b0d6bf74-b204-4a48-9509-4499ed795771 #Pass-the-cookie attack
      description: |
        Technique used to steal browser cookies 
  #cve:
    #-
  #misp:
    #-
  domains:
    - Enterprise
    - Public Cloud
    - Private Cloud
    - SaaS
  terrain: |
     Attacker must compromise a user endpoint and exfiltrate the browser cookies.
     Cookies can be found on disk, in the process memory of the browser, and in
     network traffic to remote systems.
  targets:
    - Auth token
    - Cloud Portal
    - End-user
    - Identity Services
  platforms:
    - EU Login
    - Office 365
    - Azure AD
  severity: Moderate incident
  leverage:
    - Elevation of privilege
    - Spoofing
  impact:
    - Identity Theft
    - Impairement
  viability: Environment dependent
  description: |
    Cookies contain information stored in a user browser, such as session state and
    user preferences. There are multiple ways to retrieve browser cookies using Python.

    Here are several commonly used methods in Python to obtain browser cookies
    along with example code:

    1. Use the Selenium library to retrieve browser cookies.
    
      from selenium import webdriver

      Initialize the browser driver
      driver = webdriver.Chrome()

      Open the webpage
      driver.get("http://www.example.com")

      Retrieve browser cookies
      cookies = driver.get_cookies()

      Print the cookies
      for cookie in cookies:
          print(cookie)

      Close the browser
      driver.quit()
      
    2. Using the browser developer tools to retrieve browser cookies

      import requests

      send HTTP requests
      response = requests.get("http://www.example.com")

      get response about Cookies
      cookies = response.cookies

      print out Cookies
      for cookie in cookies:
          print(cookie.name, cookie.value)   
          
    3. Saving cookies from the browser developer tools as a HAR (HTTP Archive) file
    
      In the Network panel of the browser developer tools, select a request, right-click,
      and choose “Save All as HAR with Content” to save the request and response as a
      HAR file. Then, use Python to parse the HAR file and extract the cookie information.

      The following is an example code demonstrating how to parse browser cookies using a HAR file:
    
      import json

      read HAR file
      with open("example.har", "r") as file:
          har_data = json.load(file)

      extract Cookies information
      cookies = har_data["log"]["entries"][0]["response"]["cookies"]

      print out Cookies
      for cookie in cookies:
          print(cookie["name"], cookie["value"])
        
        
    4. Use the browsercookie Python module that loads cookies used by the web browser into a
       cookiejar object. This can be useful to download the same content seen in the
       web browser without needing to login.
        
      import urllib.request
      public\_html = urllib.request.urlopen(url).read()
      opener = urllib.request.build\_opener(urllib.request.HTTPCookieProcessor(cj))
      