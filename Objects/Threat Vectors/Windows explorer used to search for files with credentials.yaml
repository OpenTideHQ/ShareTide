name: Windows explorer used to search for files with credentials
criticality: Medium
references:
  public:
    1: https://www.tipsdotcom.com/how-to-search-for-files-in-windows-10.html
    2: https://pureinfotech.com/access-network-shared-folder-windows-11
    3: https://woshub.com/cached-domain-logon-credentials-windows/
    4: https://knowledge.complexsecurity.io/cryptography/dpapi
    5: https://www.coresecurity.com/core-labs/articles/reading-dpapi-encrypted-keys-mimikatz
    6: https://blog.gitguardian.com/top-10-file-extensions/
    7: https://news.softpedia.com/news/russian-apts-prefer-windows-office-internet-explorer-exploits-507051.shtml
    8: https://spectralops.io/blog/where-your-code-secrets-hide-filetypes
    9: https://www.converter365.com/blog/most-common-file-extensions-for-windows/
    10: https://unit42.paloaltonetworks.com/behind-the-scenes-with-oilrig/
  #internal:
    #a: 

metadata:
  uuid: 78d80d14-7260-44b8-95e9-6cf3693b0024
  schema: tvm::2.1
  version: 1
  created: 2025-03-10
  modified: 2025-03-12
  tlp: clear
  organisation:
    uuid: 56b0a0f0-b0bc-47d9-bb46-02f80ae2065a
    name: EC DIGIT CSOC

threat:
  actors:
    - name: att&ck::G0007 #[Mobile] APT28, FROZENLAKE, Fancy Bear, Forest Blizzard, Group 74, IRON TWILIGHT, Pawn Storm, SNAKEMACKEREL, STRONTIUM, Sednit, Sofacy, Swallowtail, TG-4127, Threat Group-4127, Tsar Team
    - name: misp::5b4ee3ea-eee3-4c8e-8323-85ae32658754 #APT28
      sighting: |
        Cyber-espionage groups linked to the Russian government often
        use Microsoft Windows, Office, and Internet Explorer exploits
        to compromise their targets ref [5].  
      references:
        - https://news.softpedia.com/news/russian-apts-prefer-windows-office-internet-explorer-exploits-507051.shtml # APT28 threat actor, Russian affiliated uses a technique for browsing through Windows Explorer
    
    - name: att&ck::G0016 #[Enterprise] APT29, Blue Kitsune, Cozy Bear, CozyDuke, Dark Halo, IRON HEMLOCK, IRON RITUAL, Midnight Blizzard, NOBELIUM, NobleBaron, SolarStorm, StellarParticle, The Dukes, UNC2452, UNC3524, YTTRIUM
    - name: misp::b2056ff0-00b9-482e-b11c-c771daa5f28a #APT29
      #sighting: |
      references:
        - https://news.softpedia.com/news/russian-apts-prefer-windows-office-internet-explorer-exploits-507051.shtml # APT29 refference link

    - name: att&ck::G0049 #[ICS] OilRig, APT34, COBALT GYPSY, EUROPIUM, Evasive Serpens, Hazel Sandstorm, Helix Kitten, IRN2
    - name: misp::42be2a84-5a5c-4c6d-9864-3f09d75bb0ba #OilRig
      #sighting: |
      references:
        - https://unit42.paloaltonetworks.com/behind-the-scenes-with-oilrig # OilRig group uses the technique searching credential's files with Windows Explorer
  killchain: Credential Access
  #killchain2: Discovery
  att&ck:
    - T1003     # OS Credential Dumping
    - T1552.001 # Unsecured Credentials: Credentials In Files
    - T1005     # Data from Local System
    - T1552     # Unsecured Credentials
  #chaining:
    #- relation: 
      #vector: 
      #description: |
        #...
  #cve:
    #-
  #misp:
    #-
  domains:
    - Enterprise
    - Public Cloud
    - Private Cloud
  terrain: |
    A threat actor is using an already compromised Windows endpoint.  
  targets:
    - Desktop
    - Laptop
    - End-user
    - Control Server
    - Remote access
    - System admin
    - Public-Facing Servers
    - Web Application Servers
    - Customer
    - Other # Scripts executable - ex. batch scripts or PS (PowerShell) scripts
  platforms:
    - Windows
  severity: Moderate incident
  leverage:
    - Tampering
    - Infrastructure Compromise
    - Information Disclosure
  impact:
    - Identity Theft
    - Impairement
  viability: Likely
  description: |
    Credential dumping is the process of extracting sensitive information, such
    as passwords, normally in the form of a hash or a clear text content, as well
    as any other secrets stored on the compromised host ref [1], [2].         
    
    On Windows, the user's passwords and secrets can be stored in multiple
    possible locations, accessible with Windows File Explorer.  
    
    For example:

    ### Security Accounts Manager (SAM) database location

    Location of the SAM database, contains the local users of the host as well
    as the local groups: 

    `%SystemRoot%/system32/config/SAM`

    ### Windows Security configuration file

    Security config file contains LSA Secrets, for example DPAPI machine key,
    account cleartext passwords for Windows services or scheduled tasks that
    are configured on the host. Data Protection API (DPAPI) performs symmetric
    encryption of asymmetric private keys and it's used by the operation system
    to securely store passwords, encryption keys or any other type of sensitive
    data ref [3], [4] and [5].        

    `%SystemRoot%/system32/config/SECURITY`
    
    ### AppData local user folder

    AppData in the local user folder contains cleartext passwords,
    web browsers cookies and other cached browser data:  

    `%SYSTEMDRIVE%\Users\<USERNAME>\AppData\Local\Microsoft\Vault\<GUID>`

    ### Other possible Windows explorer locations for browsing
    
    Some other paths in Windows Explorer may contain password manager details,
    for example KeePass Password Database or similar.  

    Examples for paths in Windows Explorer (local locations or network shares):

    - `C:\Users\Public\TempWorkingFiles\PGM\Documents\Keepass\`
    - `C:\Users\vernada\AppData\Local\Microsoft\AppV\Client\Integration\{identifier_string}\Root`
    - `C:\ProgramData\AppV\{identifier_string}\Root\KeePass.exe`
    - `C:\Users\USERNAME\Downloads\EBSI credentials\`
    - `E:\KeePass-db\`  

    ### Automated scripts
    
    The threat actors are using automated scripts that can search for specific
    file extentions in Windows Explorer that usually contain sensitive data as 
    user and system credentials.  

    #### Batch script to search for files by a name

    Example:

    ```
    @echo off
    set /p search_term=Enter search term: 
    for /f "delims=" %%a in ('dir /b /s *%search_term%*') do echo %%a
    ```

    #### PowerShell script to search for files in Windows by content

    Example:

    ```
    $search_term = Read-Host "Enter search term"
    Get-ChildItem -Path C:\ -Recurse | Select-String -Pattern $search_term
    ```

    #### Known extentions for files (possible to be discovered via Windows Explorer)

    Browsing through Windows Explorer, threat actors are usually looking for
    file extentions of files which may contain user's credentials ref [6].  

    Example for file extensions that may contain credentials:  
    
    - Compressed (archive) files: .zip, .tar, .gz, .tgz, .rar, and others
    - Java source files: .java
    - Text files: .txt
    - PDF documents: .pdf 
    - Office file documents: .doc, .docx, .rtf, .xlsx, .pptx, .pps, .ppsm, .ppsx, .ppt
    - Backup files: .bak, .old and others
    - Archive files: .7z, .zip , .rar
    - Database files: .kd , kdbx, mdb
    - Configuration files: .config, .xml, .xsml, .xsl, .xsd, .xps, .sys
    - Execution files: .exe, .cmd, .ps1
    - Libraries: .dll
    - Shell configuration files: .bashrc, .zshrc, .cshrc
    - User AWS Folder .aws/credentials
    - Other possible files that may contain credentials: csv, tmp, .ssh, .wxs
