name: Windows credential access attempt
criticality: Medium
references:
  public:
    1: https://github.com/manikanta-suru/Credential-Dumping-Cheat-Sheet
    2: https://karim-ashraf.gitbook.io/karim_ashraf_space/writeups/advanced-log-analysis/how-to-detect-the-use-of-living-off-the-land-binaries-lolbins-in-logs
    3: https://networkencyclopedia.com/security-account-manager-sam-database/
    4: https://www.techtarget.com/searchenterprisedesktop/definition/Security-Accounts-Manager
    5: https://support.passware.com/hc/en-us/articles/360058211414-Extracting-Passwords-from-the-Acquired-Windows-Registry/
    6: https://www.fortinet.com/blog/threat-research/offense-and-defense-a-tale-of-two-sides-windows-os-credential-dumping
  #internal:
    #a: 

metadata:
  uuid: d0522985-6001-4e25-a5ff-2dc87bf2fee8
  schema: tvm::2.1
  version: 1
  created: 2025-02-03
  modified: 2025-02-11
  tlp: clear
  organisation:
    uuid: 56b0a0f0-b0bc-47d9-bb46-02f80ae2065a
    name: EC DIGIT CSOC

threat:
  actors:
    - name: misp::b2056ff0-00b9-482e-b11c-c771daa5f28a #APT29
      sighting: |
        APT29 is a sophisticated threat actor capable of analyzing stolen
        source code, identify zero-day vulnerabilities and using variety
        of techniques for aquiring Windows users password credentials. 
      references:
        - https://fieldeffect.com/blog/apt29-access-microsoft-systems

    - name: att&ck::G0016 #[Enterprise] APT29, Blue Kitsune, Cozy Bear, CozyDuke, Dark Halo, IRON HEMLOCK, IRON RITUAL, Midnight Blizzard, NOBELIUM, NobleBaron, SolarStorm, StellarParticle, The Dukes, UNC2452, UNC3524, YTTRIUM
    
    - name: att&ck::G0007 #[Enterprise] APT28, FROZENLAKE, Fancy Bear, Forest Blizzard, Group 74, IRON TWILIGHT, Pawn Storm, SNAKEMACKEREL, STRONTIUM, Sednit, Sofacy, Swallowtail, TG-4127, Threat Group-4127, Tsar Team

    - name: misp::5b4ee3ea-eee3-4c8e-8323-85ae32658754 #APT28

      sighting: |
        APT28 is a highly sophisticated threat actor group who uses
        custom tools (ex: GooseEgg) to access and gather Windows
        user's credentials in compromised networks.  
      references:
        - https://cybernews.com/security/microsoft-russian-apt-28-goose-egg-steal-credentials/

    - name: att&ck::G0007 #[Mobile] APT28, FROZENLAKE, Fancy Bear, Forest Blizzard, Group 74, IRON TWILIGHT, Pawn Storm, SNAKEMACKEREL, STRONTIUM, Sednit, Sofacy, Swallowtail, TG-4127, Threat Group-4127, Tsar Team
    
    - name: att&ck::G0032 #[ICS] Lazarus Group, Diamond Sleet, Guardians Peace, HIDDEN COBRA, Labyrinth Chollima, NICKEL ACADEMY, ZINC

    - name: misp::68391641-859f-4a9a-9a1e-3e5cf71ec376 #Lazarus Group

      sighting: |
        Some of the known techniques of the Lazarus North Korean
        threat actor group are credential access, lateral movement
        and Command & Control server activities. 
      references:
        - https://labs.withsecure.com/publications/catching-lazarus-threat-intelligence-to-real-detection-logic-part-two

    - name: att&ck::G0032 #[ICS] Lazarus Group, Diamond Sleet, Guardians Peace, HIDDEN COBRA, Labyrinth Chollima, NICKEL ACADEMY, ZINC

  killchain: Credential Access
  #Persistence
  att&ck:
    - T1003.002 # OS Credential Dumping: Security Account Manager
    - T1110.003 # Brute Force: Password Spraying
    - T1557     # Adversary-in-the-Middle, LLMNR/NBT-NS poisoning
    - T1550.002 # Use Alternate Authentication Material: Pass the Hash
    - T1110     # Brute Force
  chaining:
    - relation: sequence::preceeds
      vector: 35c76d6c-2ac7-486e-b0b7-b56f6b110bec # Password hash cracking on Windows
      description: | 
       Using a hashed password to authenticate to a system without
       knowing the plaintext password.  
    - relation: sequence::preceeds
      vector: 03cc9593-e7cf-484b-ae9c-684bf6f7199f # Pass the ticket using Kerberos ticket
      description: | 
       Exploiting Kerberos authentication tickets, which can include
       ticket forgery, ticket passing, or exploiting vulnerabilities
       in the Kerberos protocol.  
    - relation: sequence::preceeds
      vector: 3b1026c6-7d04-4b91-ba6f-abc68e993616 # Abusing Lolbins to Enumerate Local and Domain Accounts and Groups
      description: |
        A threat actor can perform reconnaissance and gathering of user's account
        information. For example, listing of the local system and domain accounts
        and groups with an attempt and goal to collect Windows credentials. 
    - relation: sequence::preceeds
      vector: d5039f2c-9fcc-4ba3-ad6a-da8c891ba745 # Abuse of Windows Utilities
      description: |
        A threat actor can abuse Windows utilities, for example installed
        and native Windows tools like WCE, cmd runas, builded functionality
        and filters like wmic which can be used for enumeration credentials.
  #cve:
    #-
  #misp:
    #- 
  domains:
    - Enterprise
    - Public Cloud
    - Private Cloud
  terrain: |
    Adversaries can use different open source tools
    (or specially created by themselves) to attempt
    stealing Windows credentials from different places
    (SAM database, LSA, LSASS, NTDS.DIT and others).  
  targets:
    - Workstations
    - Desktop
    - Laptop
    - Virtual Machines
  platforms:
    - Windows
    - Active Directory
  severity: Moderate incident
  leverage:
    - Tampering
    - Dwelling
    - Infrastructure Compromise
  impact:
    - Reputational Damages
    - Data Breach
    - Identity Theft
  viability: Likely
  description: |
    Windows credential access refers to techniques used by threat
    actors to steal authentication information such as passwords,
    hashes, tokens, or Kerberos tickets stored on or transmitted
    by Windows systems. These credentials enable unauthorized
    access to systems, networks, or sensitive data, facilitating
    lateral movement, privilege escalation, or persistent control.  

    Threat actors exploit Windows credential access using various tools
    and Living Off The Land Binaries (LOLBins) utilities to gain
    unauthorized access to sensitive information.  

    Windows credentials usually are stored in two main locations.

    ### Credentials folder (Windows Vault)

    This folder stores encrypted copies of user credentials used
    by Windows services, applications, and scheduled tasks.
    Example for path storing credentials in Windows
    
    `C:\Users\<username>\AppData\Local\Microsoft\Credentials`
    `C:\Users\<username>\%LocalAppData%\Microsoft\Credentials\`
    
    where <username> is the logged-in user's account name.  

    ### Credential Manager

    It's location is not fixed. The store of the user credentisls
    in this case may vary depending on the user account and other
    system settings as language and preferences.  

    The Windows OS has many different places it stores or caches its 
    credentials, such as:  

    - Security Accounts Manager (SAM) database. 
    The SAM database is a file present on all Windows systems. This file 
    contains all accounts created, as well as all built-in accounts.
    Passwords are stored here as hashes. (NT password hash) 
    - Other Files 
    Passwords can also be found in configuration files and user created files 
    (usually plaintext). Certain log files may contain credential information,
    such as installer logs, and can also sometimes be found in crash reports. 
    - Cached Credentials 
    Domain credentials are cached in the registry to allow users to log into their
    system when it is not connected to the domain. The Windows system caches the last
    10 logon hashes, and some store up to 25 by default. This number is configurable. 
    - Local Security Authority Secret (LSA) 
    LSA secrets are stored in the registry and allow services to run with user privileges.
    This includes VPNs, scheduled tasks, auto-logins, backup service accounts, IIS websites, etc.
    They are included in the Security/Policy/Secrets registry in encrypted form. 
    - Local Security Authority Subsystem Service Process (LSASS) 
    When logging into a Windows machine, credentials are stored in the LSASS process in memory. 
    This is primarily used to allow the user to access other resources on the network that they
    are authorized to access without having to re-authenticate. The stored formats can be
    plaintext (reversable encryption), NT and LM hash, and Kerberos tickets. 
    - Credential Store Manager 
    The manager is available with Windows 7 and higher. It is basically a digital vault that 
    allows users to store user credentials “safely.” All the credentials are stored in a 
    specific folder on the Windows system. Windows and Web credentials can be stored here. 
    - AD Domain database (NTDS.DIT)
    This database stores all credentials for users and computers located on every
    AD Domain controller server in an active directory domain environment. (%SystemRoot%\NTDS folder) 

    ### Known used tools for Windows credential dumping and access ref [1]

    - Mimikatz: A popular tool used to extract plaintext passwords,
    hash, PIN codes, and Kerberos tickets from memory. It can also
    perform pass-the-hash, pass-the-ticket, and build Golden Tickets.
    - CrackMapExec: An open-source hacking tool for Windows Active
    Directory environments.
    - Empire: a post-exploitation and adversary emulation framework
    - BloodHound: An open-source tool that uses graph theory to reveal
    the hidden and often unintended relationships within an Active
    Directory environment. 
    - Hashcat: A password cracking tool that can crack Windows hashes,
    including NTLM and LM hashes.
    - John the Ripper: A password cracking tool that can crack Windows
    passwords using dictionary attacks, brute-force attacks, or rainbow
    table attacks.
    - PsExec: A tool that allows executing commands on remote systems,
    which can be used to extract credentials.
    - Built-in Windows OS utilities as reg.exe for registry access,
    WMI Windows utility, cmd, tasklist and others. 

    ### Possible used LOLBins utilities ref [2]:

    - Windows Credential Editor (WCE): A utility that allows modifying
    Windows credentials, including adding new credentials or modifying
    existing ones.
    - cmdkey: A built-in Windows utility that allows managing cached
    credentials, including adding, deleting, or listing credentials.
    - runas: A built-in Windows utility that allows running commands
    under a different user context, which can be used to exploit
    credentials.
    - PowerShell: A powerful scripting language that can be used to
    exploit credentials, including using cmdlets like Get-Credential
    or Invoke-Command.
    - tasklist: A built-in Windows utility that can be used to list
    running processes, including those running under different user
    contexts, which can help identify potential credential
    exploitation opportunities.
    - wmic: A built-in Windows utility that provides a command-line
    interface to the Windows Management Instrumentation (WMI) repository,
    which can be used to exploit credentials.
