name: Azure - Steal Service Principal Certificate
criticality: High
references:
  public:
    1: https://microsoft.github.io/Azure-Threat-Research-Matrix/CredentialAccess/AZT602/AZT602-1/
    2: https://microsoft.github.io/Azure-Threat-Research-Matrix/CredentialAccess/CredentialAccess/
    3: https://www.semperis.com/blog/exploiting-certificate-based-authentication-in-entra-id/
  #internal:
    #a: 

metadata:
  uuid: b6543cff-2e86-4fe6-afb7-6d3595188190
  schema: tvm::2.1
  version: 1
  created: 2025-09-25
  modified: 2025-09-26
  tlp: clear
  organisation:
    uuid: 56b0a0f0-b0bc-47d9-bb46-02f80ae2065a
    name: EC DIGIT CSOC

threat:
  actors:
    - name: misp::b2056ff0-00b9-482e-b11c-c771daa5f28a #APT29, Group 100, COZY BEAR, The Dukes, Minidionis, SeaDuke, YTTRIUM, IRON HEMLOCK, Grizzly Steppe, G0016, ATK7, Cloaked Ursa, TA421, Blue Kitsune, ITG11, BlueBravo, Nobelium, UAC-0029
      sighting: |
        APT29 added credentials to OAuth Applications and Service Principals.
      references:
        - https://www.crowdstrike.com/blog/observations-from-the-stellarparticle-campaign/
  killchain: Credential Access
  att&ck:
    - T1649 #Steal or Forge Authentication Certificates
    - T1098.001 #Account Manipulation: Additional Cloud Credentials
    - T1078.004 #Valid Accounts: Cloud Accounts
  chaining:
    - relation: sequence::succeeds
      vector: 140907eb-c9fb-4330-9d71-656422388b2b #Azure - Gather Role Information
      description: |
        Adversaries need to identify privileged accounts and misconfigured role 
        assignments that can be exploited for privilege escalation.
    - relation: sequence::succeeds
      vector: b1593e0b-1b3b-462d-9ab6-21d1c136469d #Azure - Gather Resource Data
      description: |
        The attacker obtains credentials (via phishing, password spray, leaked keys)
        granting at least Reader access to the target Azure tenant.
    - relation: sequence::succeeds
      vector: 2743bf18-3b86-4721-bf3e-153dcda0b149 #Azure - Valid Credentials
      description: |
        Adversaries obtain the username and password of an AzureAD user either through
        phishing, password spraying, brute-force attacks, or credentials leaked online.
    - relation: sequence::preceeds
      vector: 61ddc240-e5a6-4ca8-ae77-6b471b498913 #Code execution via custom script extensions in Azure
      description: |
        Adversaries must have an Azure role that grants the ability to write or deploy 
        custom script extensions on virtual machines.
    - relation: sequence::preceeds
      vector: 23f6a192-a25d-48b8-a235-7bb55e483682 #Persistence w/ Azure Automanage Machine Configuration
      description: |
        The adversary needs the owner access role on the targeted Azure subscription to apply
        the Azure Policy and grant permissions for the system-managed identities.
    - relation: support::enabled
      vector: bb2501d5-99c7-44a6-ac5a-9510102d6611 #Azure - Principal Impersonation
      description: |
        Adversaries gains access via phishing, credential stuffing, or exploiting misconfigurations 
        allowing access to an account with application management permissions or to a pipeline 
        that exposes service principal credentials.
    - relation: support::enabled
      vector: 53063205-4404-4e6d-a2f5-d566c6085d96 #Data collection using SharpHound, SoapHound, Bloodhound & Azurehound
      description: |
        Attackers need to establish an initial presence within the target environment, in 
        order to gather sufficient permissions to execute the data collection tools.
    - relation: support::enabled
      vector: a8c7b250-a2d4-4a0d-82f8-23dc99c77d7b #Addition credentials OAuth applications & service principals
      description: |
        Adversaries need to have gained a sufficient foothold in the  on-premises
        environment before starting to modify Azure  Active Directory.
  #cve:
    #-
  #misp:
    #-
  domains:
    - Public Cloud
  terrain: |
    Adversaries must gain initial access (often via compromised credentials
    or over-permissive access control) to an Azure Automation Account 
    utilizing a `RunAs` (service principal) account.
  targets:
    - Identity Services
    - Cloud Portal
    - Server Authentication
  platforms:
    - Azure
    - Azure AD
  severity: Significant incident
  leverage:
    - Spoofing
    - Tampering
    - Elevation of privilege
    - Information Disclosure 
  impact:
    - Data Breach
    - Identity Theft
    - Reputational Damages
  viability: Likely
  description: |
    The following threat vector involves adversaries targeting certificates used by 
    Azure service principals (especially in Automation Accounts using `RunAs` accounts) 
    to gain unauthorized access. 

    ### Example Attack Scenario

    An attacker gains access to an Azure Automation Account that uses a RunAs account 
    for automation workflows. By editing or creating a new Runbook in the compromised 
    Automation Account, the adversary modifies the runbook to extract and display the 
    private certificate associated with the Service Principal. Once the runbook is executed, 
    the certificate is exposed, often as plain text in output logs or variables. The 
    attacker then downloads or copies this certificate file for later use.

    ### Attack Goals and Impact

    The attackerâ€™s main goal is to obtain a valid authentication method for the targeted 
    service principal by stealing its certificate. With the certificate and its private 
    key, the attacker can:
    - Authenticate as the service principal to Azure AD and access resources the principal 
    is authorized to access.
    - Perform privilege escalation or lateral movement by leveraging the service principal's 
    permissions, possibly affecting critical resources or sensitive operations.
    - Maintain persistence and evade detection since service principal authentication 
    is a common and legitimate operational pattern in cloud automation.

    ### Attack Flow and Methodology

    1. Attacker identifies runbooks and determines which ones use `RunAs` authentication.
    2. Adversary writes or edits a runbook to programmatically extract the `RunAs` certificate 
    from its local storage or configuration.
    3. Attacker executes the runbook, which outputs or transmits the certificate (sometimes 
    via logging or storage).
    4. The adversary captures and exfiltrates the certificate and private key material, 
    either through Azure portal log downloads, storage account access, or interactive 
    session output.
    5. With the certificate, the attacker can authenticate to Azure as the service principal, 
    perform malicious operations, and potentially move laterally or escalate privileges, 
    depending on the permissions assigned to the compromised principal.
